//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFWebClient.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EntitiesLayer")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeptidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Deptid {
            get {
                return this.DeptidField;
            }
            set {
                if ((this.DeptidField.Equals(value) != true)) {
                    this.DeptidField = value;
                    this.RaisePropertyChanged("Deptid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ecode {
            get {
                return this.EcodeField;
            }
            set {
                if ((this.EcodeField.Equals(value) != true)) {
                    this.EcodeField = value;
                    this.RaisePropertyChanged("Ecode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ename {
            get {
                return this.EnameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnameField, value) != true)) {
                    this.EnameField = value;
                    this.RaisePropertyChanged("Ename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/WCFEmpServiceLib")]
    [System.SerializableAttribute()]
    public partial class MyException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IEmpService")]
    public interface IEmpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetAllEmps", ReplyAction="http://tempuri.org/IEmpService/GetAllEmpsResponse")]
        WCFWebClient.ServiceReference2.Employee[] GetAllEmps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetAllEmps", ReplyAction="http://tempuri.org/IEmpService/GetAllEmpsResponse")]
        System.Threading.Tasks.Task<WCFWebClient.ServiceReference2.Employee[]> GetAllEmpsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmployee", ReplyAction="http://tempuri.org/IEmpService/AddEmployeeResponse")]
        void AddEmployee(WCFWebClient.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmployee", ReplyAction="http://tempuri.org/IEmpService/AddEmployeeResponse")]
        System.Threading.Tasks.Task AddEmployeeAsync(WCFWebClient.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/DeleteEmpById", ReplyAction="http://tempuri.org/IEmpService/DeleteEmpByIdResponse")]
        void DeleteEmpById(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/DeleteEmpById", ReplyAction="http://tempuri.org/IEmpService/DeleteEmpByIdResponse")]
        System.Threading.Tasks.Task DeleteEmpByIdAsync(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/UpdateEmpById", ReplyAction="http://tempuri.org/IEmpService/UpdateEmpByIdResponse")]
        void UpdateEmpById(WCFWebClient.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/UpdateEmpById", ReplyAction="http://tempuri.org/IEmpService/UpdateEmpByIdResponse")]
        System.Threading.Tasks.Task UpdateEmpByIdAsync(WCFWebClient.ServiceReference2.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpById", ReplyAction="http://tempuri.org/IEmpService/GetEmpByIdResponse")]
        WCFWebClient.ServiceReference2.Employee GetEmpById(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpById", ReplyAction="http://tempuri.org/IEmpService/GetEmpByIdResponse")]
        System.Threading.Tasks.Task<WCFWebClient.ServiceReference2.Employee> GetEmpByIdAsync(int ecode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpServiceChannel : WCFWebClient.ServiceReference2.IEmpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpServiceClient : System.ServiceModel.ClientBase<WCFWebClient.ServiceReference2.IEmpService>, WCFWebClient.ServiceReference2.IEmpService {
        
        public EmpServiceClient() {
        }
        
        public EmpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFWebClient.ServiceReference2.Employee[] GetAllEmps() {
            return base.Channel.GetAllEmps();
        }
        
        public System.Threading.Tasks.Task<WCFWebClient.ServiceReference2.Employee[]> GetAllEmpsAsync() {
            return base.Channel.GetAllEmpsAsync();
        }
        
        public void AddEmployee(WCFWebClient.ServiceReference2.Employee emp) {
            base.Channel.AddEmployee(emp);
        }
        
        public System.Threading.Tasks.Task AddEmployeeAsync(WCFWebClient.ServiceReference2.Employee emp) {
            return base.Channel.AddEmployeeAsync(emp);
        }
        
        public void DeleteEmpById(int ecode) {
            base.Channel.DeleteEmpById(ecode);
        }
        
        public System.Threading.Tasks.Task DeleteEmpByIdAsync(int ecode) {
            return base.Channel.DeleteEmpByIdAsync(ecode);
        }
        
        public void UpdateEmpById(WCFWebClient.ServiceReference2.Employee emp) {
            base.Channel.UpdateEmpById(emp);
        }
        
        public System.Threading.Tasks.Task UpdateEmpByIdAsync(WCFWebClient.ServiceReference2.Employee emp) {
            return base.Channel.UpdateEmpByIdAsync(emp);
        }
        
        public WCFWebClient.ServiceReference2.Employee GetEmpById(int ecode) {
            return base.Channel.GetEmpById(ecode);
        }
        
        public System.Threading.Tasks.Task<WCFWebClient.ServiceReference2.Employee> GetEmpByIdAsync(int ecode) {
            return base.Channel.GetEmpByIdAsync(ecode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IMathService")]
    public interface IMathService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/DivideNumber", ReplyAction="http://tempuri.org/IMathService/DivideNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFWebClient.ServiceReference2.MyException), Action="http://tempuri.org/IMathService/DivideNumberMyExceptionFault", Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/WCFEmpServiceLib")]
        void DivideNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathService/DivideNumber", ReplyAction="http://tempuri.org/IMathService/DivideNumberResponse")]
        System.Threading.Tasks.Task DivideNumberAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathServiceChannel : WCFWebClient.ServiceReference2.IMathService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathServiceClient : System.ServiceModel.ClientBase<WCFWebClient.ServiceReference2.IMathService>, WCFWebClient.ServiceReference2.IMathService {
        
        public MathServiceClient() {
        }
        
        public MathServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MathServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DivideNumber() {
            base.Channel.DivideNumber();
        }
        
        public System.Threading.Tasks.Task DivideNumberAsync() {
            return base.Channel.DivideNumberAsync();
        }
    }
}
